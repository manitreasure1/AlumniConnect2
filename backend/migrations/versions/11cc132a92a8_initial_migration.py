"""Initial migration.

Revision ID: 11cc132a92a8
Revises: 
Create Date: 2025-03-26 05:04:55.822755

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '11cc132a92a8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course',
    sa.Column('course_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('course_id')
    )
    op.create_table('house',
    sa.Column('house_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=55), nullable=False),
    sa.PrimaryKeyConstraint('house_id')
    )
    with op.batch_alter_table('house', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_house_name'), ['name'], unique=True)

    op.create_table('role',
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('activity', sa.String(length=150), nullable=False),
    sa.PrimaryKeyConstraint('role_id')
    )
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_role_title'), ['title'], unique=True)

    op.create_table('users',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('firstname', sa.String(length=50), nullable=False),
    sa.Column('lastname', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('house_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['house_id'], ['house.house_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=False)

    op.create_table('users_courses',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('course_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.course_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'course_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_courses')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))

    op.drop_table('users')
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_role_title'))

    op.drop_table('role')
    with op.batch_alter_table('house', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_house_name'))

    op.drop_table('house')
    op.drop_table('course')
    # ### end Alembic commands ###
